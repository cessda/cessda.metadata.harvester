<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.cessda</groupId>
	<artifactId>oaiharvester</artifactId>
	<version>3.2.2-SNAPSHOT</version>
	<name>CESSDA OAI-PMH Metadata Harvester</name>
	<description>
		A microservice for harvesting metadata made available by third parties by using the Open Archives
		Initiatives Protocol for Metadata Harvesting.
	</description>
	<inceptionYear>2019</inceptionYear>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.5</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>17</java.version>
		<gesis.repository.visibility>public</gesis.repository.visibility>
		<image_tag>cessda/${project.artifactId}:${project.version}</image_tag>
		<code-generation-comment>This file is generated, all changes will be overridden</code-generation-comment>
		<logging.file>target/application.log</logging.file>
		<logging.level.org.springframework>INFO</logging.level.org.springframework>
		<server.port>8083</server.port>
		<server.servlet.context-path />
		<documents>data</documents>
		<sonar.sources>src/main/</sonar.sources>
		<sonar.tests>src/test/</sonar.tests>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.7.2</version>
		</dependency>

		<!-- Json Encoder in Logstash for Logback -->
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>7.3</version>
		</dependency>

		<!-- HTTP Client -->
		<dependency>
			<groupId>com.github.mizosoft.methanol</groupId>
			<artifactId>methanol</artifactId>
			<version>1.7.0</version>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- http://stackoverflow.com/a/9825309 -->
				<configuration>
					<argLine>@{argLine} -Dfile.encoding=UTF-8</argLine>
					<reuseForks>true</reuseForks>
					<forkCount>1</forkCount>
					<runOrder>failedfirst</runOrder>
					<dependenciesToScan>
						<dependency>org.gesis.commons:commons-test</dependency>
					</dependenciesToScan>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.9</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgs>
						<arg>-Xlint:all</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.9.10</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<verbose>false</verbose>
					<useNativeGit>false</useNativeGit>
					<failOnNoGitDirectory>false</failOnNoGitDirectory>
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.42.1</version>
				<configuration>
					<images>
						<image>
							<name>${image_tag}</name>
							<build>
								<dockerFile>${project.basedir}/target/docker/generated/application.Dockerfile</dockerFile>
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>initialize</phase>
						<configuration>
							<!-- https://stackoverflow.com/a/44033580 -->
							<exportAntProperties>true</exportAntProperties>
							<target>
								<condition property="isSnapshot">
									<contains string="${project.version}" substring="SNAPSHOT" />
								</condition>
								<condition property="docker.registry.uri" value="docker-private-snapshots.gesis.intra">
									<isset property="isSnapshot" />
								</condition>
								<property name="docker.registry.uri" value="docker-private-releases.gesis.intra" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.0.0</version>
				<configuration>
					<licenseName>apache_v2</licenseName>
					<addJavaLicenseAfterPackage>true</addJavaLicenseAfterPackage>
					<failOnMissingHeader>true</failOnMissingHeader>
					<failOnNotUptodateHeader>true</failOnNotUptodateHeader>
				</configuration>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>check-file-header</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
		</plugins>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application.properties</include>
					<include>**/application*.yml</include>
					<include>logback-spring.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>git.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources/docker</directory>
				<filtering>true</filtering>
				<targetPath>${project.basedir}/target/docker/generated</targetPath>
				<includes>
					<include>**/*</include>
					<include>application.Dockerfile</include>
				</includes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.8,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>docker-compose</id>
			<properties>
				<documents>/${project.artifactId}/data</documents>
				<logging.file>application.log</logging.file>
			</properties>
		</profile>
	</profiles>

	<organization>
		<name>CESSDA ERIC</name>
		<url>https://www.cessda.eu/</url>
	</organization>

	<scm>
		<url>https://github.com/cessda/cessda.metadata.harvester</url>
		<connection>scm:git:https://github.com/cessda/cessda.metadata.harvester.git</connection>
	  <tag>HEAD</tag>
  </scm>

</project>
